{
  "version": 3,
  "sources": ["../bundle-4d0KB7/checked-fetch.js", "../../../src/infrastructure/protobuf.service.ts", "../../../src/infrastructure/scraper.utils.ts", "../../../src/infrastructure/scraper.service.ts", "../../../src/application/flight.service.ts", "../../../src/presentation/api.ts", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-4d0KB7/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-4d0KB7/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/ramonpons/Documents/PROGRAMACIO\u0301N/protobuf-scrapper/GoogleFlightsScrapperJS/.wrangler/tmp/dev-tyaZqV",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "import { FlightSearch } from '../domain/types';\n\nexport class ProtobufService {\n  private static readonly MAX_UINT64 = BigInt('18446744073709551615');\n\n  private static writeVarint(value: number | bigint): number[] {\n    const result: number[] = [];\n    if (typeof value === 'number') {\n      value = BigInt(value);\n    }\n    while (value > BigInt(127)) {\n      result.push(Number(value & BigInt(127)) | 128);\n      value = value >> BigInt(7);\n    }\n    result.push(Number(value));\n    return result;\n  }\n\n  private static writeString(value: string): number[] {\n    const bytes = new TextEncoder().encode(value);\n    return [...this.writeVarint(bytes.length), ...bytes];\n  }\n\n  private static writeField(fieldNumber: number, wireType: number, value: number[]): number[] {\n    const tag = (fieldNumber << 3) | wireType;\n    return [...this.writeVarint(tag), ...value];\n  }\n\n  private static createAirportMessage(code: string): number[] {\n    return [\n      ...this.writeField(1, 0, this.writeVarint(1)), // field1 = 1\n      ...this.writeField(2, 2, this.writeString(code)) // code = airport code\n    ];\n  }\n\n  private static createFlightInfoMessage(date: string, originCode: string, destinationCode: string): number[] {\n    const origin = this.createAirportMessage(originCode);\n    const destination = this.createAirportMessage(destinationCode);\n\n    return [\n      ...this.writeField(2, 2, this.writeString(date)), // date field (2)\n      ...this.writeField(5, 0, this.writeVarint(0)), // filter_stops field (5)\n      ...this.writeField(13, 2, [...this.writeVarint(origin.length), ...origin]), // origin field (13)\n      ...this.writeField(14, 2, [...this.writeVarint(destination.length), ...destination]) // destination field (14)\n    ];\n  }\n\n  private static createField16ValueMessage(): number[] {\n    return [\n      ...this.writeField(1, 0, this.writeVarint(this.MAX_UINT64)) // field1 = MAX_UINT64\n    ];\n  }\n\n  public static createFlightSearch(\n    originCode: string,\n    destinationCode: string,\n    date: string\n  ): Uint8Array {\n    // Create FlightInfo message\n    const flightInfo = this.createFlightInfoMessage(date, originCode, destinationCode);\n    \n    // Create Field16Value message\n    const field16Value = this.createField16ValueMessage();\n\n    // Create FlightSearch message following exact proto field order\n    const searchMsg = [\n      ...this.writeField(1, 0, this.writeVarint(28)), // field1 = 28 (1)\n      ...this.writeField(2, 0, this.writeVarint(2)), // field2 = 2 (2)\n      ...this.writeField(3, 2, [...this.writeVarint(flightInfo.length), ...flightInfo]), // flight_info (3)\n      ...this.writeField(8, 0, this.writeVarint(1)), // field8 = 1 (8)\n      ...this.writeField(9, 0, this.writeVarint(1)), // field9 = 1 (9)\n      ...this.writeField(14, 0, this.writeVarint(1)), // field14 = 1 (14)\n      ...this.writeField(16, 2, [...this.writeVarint(field16Value.length), ...field16Value]), // field16 (16)\n      ...this.writeField(19, 0, this.writeVarint(2)) // field19 = 2 (19)\n    ];\n\n    return new Uint8Array(searchMsg);\n  }\n\n  public static async encodeFlightSearch(\n    originCode: string,\n    destinationCode: string,\n    date: string\n  ): Promise<string> {\n    const data = this.createFlightSearch(originCode, destinationCode, date);\n    return this.toBase64Url(data);\n  }\n\n  private static toBase64Url(data: Uint8Array): string {\n    // Convert to base64 and make URL safe\n    return btoa(String.fromCharCode(...data))\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/, '');\n  }\n\n  private static fromBase64Url(encoded: string): Uint8Array {\n    // Convert from URL safe base64 back to binary\n    const base64 = encoded.replace(/-/g, '+').replace(/_/g, '/');\n    const binary = atob(base64);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n      bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n  }\n}", "export const cleanText = (text: string): string => {\n  const parts = text.split(/\\s+/);\n  const seen = new Set<string>();\n  const unique = parts.filter(part => {\n    if (!seen.has(part)) {\n      seen.add(part);\n      return true;\n    }\n    return false;\n  });\n  return unique.join(' ').trim();\n};\n\nexport const parseDuration = (duration: string): number => {\n  const cleaned = cleanText(duration);\n  const parts = cleaned.split(' ');\n  let total = 0;\n\n  for (let i = 0; i < parts.length - 1; i += 2) {\n    const num = parseInt(parts[i], 10);\n    const unit = parts[i + 1].toLowerCase();\n\n    if (unit.startsWith('hr')) {\n      total += num * 60;\n    } else if (unit.startsWith('min')) {\n      total += num;\n    }\n  }\n\n  return total;\n};\n\nexport const extractLogoUrl = (style: string): string => {\n  const urlMatch = style.match(/url\\((.*?)\\)/);\n  return urlMatch ? urlMatch[1].replace(/['\"]/g, '') : '';\n};\n\nexport const parseTime = (timeStr: string): Date => {\n  const date = new Date();\n  const [hours, minutes] = timeStr.split(':');\n  date.setHours(parseInt(hours, 10));\n  date.setMinutes(parseInt(minutes, 10));\n  return date;\n};\n\nexport const formatTime = (date: Date): string => {\n  return date.toLocaleTimeString('en-US', {\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true\n  });\n};\n\nexport const extractFlightNumber = (url: string): string => {\n  const parts = url.split('-');\n  return parts.length > 3 ? `${parts[2]} ${parts[3]}` : '';\n};", "import { Airport, Flight, FlightResponse } from '../domain/types';\nimport { cleanText, parseDuration, extractLogoUrl } from './scraper.utils';\n\nexport class ScraperService {\n  private static readonly USER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36';\n  private static readonly TIMEOUT = 10000; // 10 seconds timeout like Go version\n\n  private static async fetchHtml(url: string): Promise<Response> {\n    console.log('Fetching URL:', url);\n    \n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), this.TIMEOUT);\n\n    try {\n      // Keep only essential headers that match Go implementation\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'User-Agent': this.USER_AGENT,\n          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',\n          'Accept-Language': 'en-US,en;q=0.9',\n          'Connection': 'keep-alive',\n          'Cookie': 'CONSENT=YES+GB.en+202510+170+666'\n        },\n        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return response;\n    } catch (error: unknown) {\n      clearTimeout(timeoutId);\n      if (error instanceof Error) {\n        if (error.name === 'AbortError') {\n          throw new Error('Request timed out after 10 seconds');\n        }\n        throw new Error(`Failed to fetch HTML: ${error.message}`);\n      }\n      throw new Error('Failed to fetch HTML: Unknown error');\n    }\n  }\n\n  private static extractDateFromUrl(url: string): string {\n    const searchParams = new URL(url).searchParams;\n    const tfs = searchParams.get('tfs');\n    if (!tfs) throw new Error('No search parameters found in URL');\n\n    // Decode the protobuf data to get the date\n    const data = atob(tfs.replace(/-/g, '+').replace(/_/g, '/'));\n    // The date is stored in YYYY-MM-DD format at a fixed position\n    const dateMatch = data.match(/\\d{4}-\\d{2}-\\d{2}/);\n    if (!dateMatch) throw new Error('No date found in search parameters');\n    \n    return dateMatch[0];\n  }\n\n  private static createEmptyFlight(): Flight {\n    return {\n      departureAirport: {\n        name: '',\n        id: '',\n        time: '',\n        timeDate: new Date()\n      },\n      arrivalAirport: {\n        name: '',\n        id: '',\n        time: '',\n        timeDate: new Date()\n      },\n      duration: 0,\n      airline: '',\n      airlineLogo: '',\n      flightNumber: ''\n    };\n  }\n\n  public static async extractFlights(url: string): Promise<FlightResponse> {\n    console.log('Starting flight extraction from:', url);\n    \n    const flightDate = this.extractDateFromUrl(url);\n    console.log('Extracted flight date:', flightDate);\n\n    // Extract origin and destination from URL parameters\n    const searchParams = new URL(url).searchParams;\n    const origin = searchParams.get('origin') || '';\n    const destination = searchParams.get('destination') || '';\n\n    const response: FlightResponse = {\n      flights: [],\n      totalDuration: 0,\n      price: 0,\n      type: 'One way',\n      airlineLogo: '',\n      bookingToken: ''\n    };\n\n    const uniqueFlights = new Map<string, Flight>();\n    let currentFlight = this.createEmptyFlight();\n\n    try {\n      const htmlResponse = await this.fetchHtml(url);\n      \n      const rewriter = new HTMLRewriter()\n        .on('.JMc5Xc', {\n          element(element) {\n            const desc = element.getAttribute('aria-label');\n            if (desc) {\n              const parts = desc.split('. ');\n              for (const part of parts) {\n                if (part.startsWith('Leaves ')) {\n                  const idx = part.indexOf(' at ');\n                  if (idx !== -1) {\n                    currentFlight.departureAirport.name = part.substring(7, idx);\n                    currentFlight.departureAirport.id = origin;\n                  }\n                }\n                if (part.includes('arrives at ')) {\n                  const idx = part.indexOf('arrives at ');\n                  if (idx !== -1) {\n                    const rest = part.substring(idx + 10);\n                    const endIdx = rest.indexOf(' at ');\n                    if (endIdx !== -1) {\n                      currentFlight.arrivalAirport.name = rest.substring(0, endIdx);\n                      currentFlight.arrivalAirport.id = destination;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        })\n        .on('[aria-label^=\"Departure time:\"]', {\n          element(element) {\n            const label = element.getAttribute('aria-label');\n            if (label) {\n              let time = cleanText(label.replace('Departure time: ', '').replace('.', ''));\n              const timeStr = `${flightDate} ${time}`;\n              currentFlight.departureAirport.time = timeStr;\n              currentFlight.departureAirport.timeDate = new Date(timeStr);\n            }\n          }\n        })\n        .on('[aria-label^=\"Arrival time:\"]', {\n          element(element) {\n            const label = element.getAttribute('aria-label');\n            if (label) {\n              let time = cleanText(label.replace('Arrival time: ', '').replace('.', ''));\n              const timeStr = `${flightDate} ${time}`;\n              currentFlight.arrivalAirport.time = timeStr;\n              currentFlight.arrivalAirport.timeDate = new Date(timeStr);\n            }\n          }\n        })\n        .on('.gvkrdb', {\n          element(element) {\n            const durationLabel = element.getAttribute('aria-label') || element.textContent;\n            if (durationLabel) {\n              let durationText = durationLabel;\n              if (durationLabel.startsWith('Total duration ')) {\n                durationText = durationLabel.replace('Total duration ', '').replace('.', '');\n              }\n              currentFlight.duration = parseDuration(durationText);\n              \n              if (response.totalDuration === 0 || currentFlight.duration < response.totalDuration) {\n                response.totalDuration = currentFlight.duration;\n              }\n            }\n          }\n        })\n        .on('.YMlIz.FpEdX.jLMuyc', {\n          text(text) {\n            const priceStr = cleanText(text.text).replace('\u20AC', '');\n            const price = parseInt(priceStr, 10);\n            if (!isNaN(price)) {\n              response.price = price;\n            }\n          }\n        })\n        .on('.EbY4Pc', {\n          element(element) {\n            const style = element.getAttribute('style');\n            if (style) {\n              const logoUrl = extractLogoUrl(style);\n              if (logoUrl) {\n                currentFlight.airlineLogo = logoUrl;\n                response.airlineLogo = logoUrl;\n              }\n            }\n          }\n        })\n        .on('.sSHqwe span', {\n          text(text) {\n            currentFlight.airline = text.text.trim();\n          }\n        })\n        .on('.NZRfve', {\n          element(element) {\n            const url = element.getAttribute('data-travelimpactmodelwebsiteurl');\n            if (url) {\n              const parts = url.split('-');\n              if (parts.length > 3) {\n                currentFlight.flightNumber = `${parts[2]} ${parts[3]}`;\n              }\n              response.bookingToken = url;\n\n              // Store flight if we have all required data\n              if (currentFlight.departureAirport.time && \n                  currentFlight.arrivalAirport.time && \n                  currentFlight.duration > 0) {\n                // Store flight in unique flights map\n                const key = `${currentFlight.flightNumber}-${currentFlight.departureAirport.time}`;\n                uniqueFlights.set(key, { ...currentFlight });\n                // Reset for next flight\n                currentFlight = ScraperService.createEmptyFlight();\n              }\n            }\n          }\n        });\n\n      const transformed = await rewriter.transform(htmlResponse);\n      await transformed.text(); // Consume the response to ensure all handlers are executed\n\n      // Convert unique flights map to array and sort by departure time\n      response.flights = Array.from(uniqueFlights.values())\n        .sort((a, b) => a.departureAirport.timeDate.getTime() - b.departureAirport.timeDate.getTime());\n\n      console.log(`Found ${response.flights.length} flights`);\n      console.log(`Lowest price: \u20AC${response.price}, Total duration: ${response.totalDuration} minutes`);\n\n      return response;\n    } catch (error: unknown) {\n      console.error('Flight extraction error:', error);\n      if (error instanceof Error) {\n        throw error;\n      }\n      throw new Error('Unknown error during flight extraction');\n    }\n  }\n}", "import { FlightResponse } from '../domain/types';\nimport { ProtobufService } from '../infrastructure/protobuf.service';\nimport { ScraperService } from '../infrastructure/scraper.service';\n\nexport class FlightService {\n  private static readonly BASE_URL = 'https://www.google.com/travel/flights/search';\n\n  private static validateInput(originCode: string, destinationCode: string, date: string): void {\n    if (!originCode || !destinationCode || !date) {\n      throw new Error('Origin, destination, and date are required');\n    }\n\n    if (!/^[A-Z]{3}$/.test(originCode) || !/^[A-Z]{3}$/.test(destinationCode)) {\n      throw new Error('Airport codes must be 3 uppercase letters');\n    }\n\n    if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(date)) {\n      throw new Error('Date must be in YYYY-MM-DD format');\n    }\n\n    const dateObj = new Date(date);\n    if (isNaN(dateObj.getTime())) {\n      throw new Error('Invalid date');\n    }\n  }\n\n  public static async searchFlights(\n    originCode: string,\n    destinationCode: string,\n    date: string\n  ): Promise<FlightResponse> {\n    console.log(`Searching flights from ${originCode} to ${destinationCode} on ${date}`);\n    \n    try {\n      // Validate input\n      this.validateInput(originCode, destinationCode, date);\n\n      // Encode search parameters\n      const encoded = await ProtobufService.encodeFlightSearch(\n        originCode,\n        destinationCode,\n        date\n      );\n      console.log('Encoded search parameters');\n      \n      // Build URL with parameters\n      const url = new URL(this.BASE_URL);\n      url.searchParams.set('tfs', encoded);\n      url.searchParams.set('tfu', 'EgYIAxAAGAA');\n      url.searchParams.set('hl', 'en');\n      // Add origin and destination codes for the scraper\n      url.searchParams.set('origin', originCode);\n      url.searchParams.set('destination', destinationCode);\n\n      console.log('Generated URL:', url.toString());\n\n      // Extract flights\n      const response = await ScraperService.extractFlights(url.toString());\n      \n      // Cache response\n      await this.cacheResponse(originCode, destinationCode, date, response);\n      \n      console.log('Successfully retrieved flights:', {\n        count: response.flights.length,\n        totalDuration: response.totalDuration,\n        price: response.price\n      });\n\n      return response;\n    } catch (error) {\n      console.error('Failed to search flights:', error);\n      throw new Error(\n        `Failed to search flights from ${originCode} to ${destinationCode}: ${\n          error instanceof Error ? error.message : 'Unknown error'\n        }`\n      );\n    }\n  }\n\n  private static async cacheResponse(\n    originCode: string,\n    destinationCode: string,\n    date: string,\n    response: FlightResponse\n  ): Promise<void> {\n    try {\n      const cacheKey = `flights:${originCode}:${destinationCode}:${date}`;\n      // Example using KV (uncomment when using Cloudflare Workers)\n      // await FLIGHTS_KV.put(cacheKey, JSON.stringify(response), {\n      //   expirationTtl: 3600 // Cache for 1 hour\n      // });\n      console.log('Cached response with key:', cacheKey);\n    } catch (error) {\n      console.warn('Failed to cache response:', error);\n      // Don't throw error for cache failures\n    }\n  }\n}", "import { FlightService } from '../application/flight.service';\n\ninterface ErrorResponse {\n  error: string;\n  status: number;\n  details?: any;\n}\n\nexport class Api {\n  private static corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n\n  private static jsonResponse(data: any, status: number = 200): Response {\n    return new Response(JSON.stringify(data, null, 2), {\n      status,\n      headers: {\n        'Content-Type': 'application/json',\n        ...this.corsHeaders,\n      },\n    });\n  }\n\n  private static errorResponse(error: Error | string, status: number = 500, details?: any): Response {\n    console.error('API Error:', {\n      error: error instanceof Error ? error.message : error,\n      stack: error instanceof Error ? error.stack : undefined,\n      details\n    });\n\n    const errorResponse: ErrorResponse = {\n      error: error instanceof Error ? error.message : error,\n      status,\n      details\n    };\n    return this.jsonResponse(errorResponse, status);\n  }\n\n  public static async handleRequest(request: Request): Promise<Response> {\n    console.log('Handling request:', request.url);\n    \n    try {\n      // Handle CORS preflight requests\n      if (request.method === 'OPTIONS') {\n        return new Response(null, {\n          headers: this.corsHeaders,\n        });\n      }\n\n      // Only accept GET requests\n      if (request.method !== 'GET') {\n        return this.errorResponse('Method not allowed', 405);\n      }\n\n      const url = new URL(request.url);\n      console.log('Request path:', url.pathname);\n      console.log('Request params:', Object.fromEntries(url.searchParams));\n\n      // Flight search endpoint\n      if (url.pathname === '/flights') {\n        const originCode = url.searchParams.get('origin');\n        const destinationCode = url.searchParams.get('destination');\n        const date = url.searchParams.get('date');\n\n        // Validate parameters\n        if (!originCode || !destinationCode || !date) {\n          return this.errorResponse(\n            'Missing required parameters: origin, destination, and date are required',\n            400,\n            { params: { originCode, destinationCode, date } }\n          );\n        }\n\n        // Validate airport codes\n        if (!/^[A-Z]{3}$/.test(originCode) || !/^[A-Z]{3}$/.test(destinationCode)) {\n          return this.errorResponse(\n            'Invalid airport code format. Must be 3 uppercase letters',\n            400,\n            { params: { originCode, destinationCode } }\n          );\n        }\n\n        // Validate date format (YYYY-MM-DD)\n        if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(date)) {\n          return this.errorResponse(\n            'Invalid date format. Must be YYYY-MM-DD',\n            400,\n            { params: { date } }\n          );\n        }\n\n        try {\n          console.log('Searching flights...');\n          const flights = await FlightService.searchFlights(\n            originCode,\n            destinationCode,\n            date\n          );\n          console.log('Search completed successfully');\n          return this.jsonResponse(flights);\n        } catch (error) {\n          console.error('Flight search error:', error);\n          return this.errorResponse(\n            `Failed to search flights from ${originCode} to ${destinationCode}`,\n            500,\n            { originalError: error instanceof Error ? error.message : error }\n          );\n        }\n      }\n\n      return this.errorResponse('Not found', 404);\n    } catch (error) {\n      console.error('Unhandled API error:', error);\n      return this.errorResponse(error as Error);\n    }\n  }\n}", "import { Api } from './presentation/api';\n\nexport default {\n  async fetch(request: Request, env: any, ctx: ExecutionContext): Promise<Response> {\n    try {\n      return await Api.handleRequest(request);\n    } catch (error) {\n      console.error('Worker Error:', error);\n      return new Response(JSON.stringify({\n        error: 'Internal Server Error',\n        status: 500\n      }), {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    }\n  }\n};", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/ramonpons/Documents/PROGRAMACIO\u0301N/protobuf-scrapper/GoogleFlightsScrapperJS/dist/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/ramonpons/Documents/PROGRAMACIO\u0301N/protobuf-scrapper/GoogleFlightsScrapperJS/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/ramonpons/Documents/PROGRAMACIO\u0301N/protobuf-scrapper/GoogleFlightsScrapperJS/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/ramonpons/Documents/PROGRAMACIO\u0301N/protobuf-scrapper/GoogleFlightsScrapperJS/dist/index.js\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/ramonpons/Documents/PROGRAMACIO\u0301N/protobuf-scrapper/GoogleFlightsScrapperJS/.wrangler/tmp/bundle-4d0KB7/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/ramonpons/Documents/PROGRAMACIO\u0301N/protobuf-scrapper/GoogleFlightsScrapperJS/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/ramonpons/Documents/PROGRAMACIO\u0301N/protobuf-scrapper/GoogleFlightsScrapperJS/.wrangler/tmp/bundle-4d0KB7/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/ramonpons/Documents/PROGRAMACIO\u0301N/protobuf-scrapper/GoogleFlightsScrapperJS/.wrangler/tmp/bundle-4d0KB7/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["ProtobufService", "value", "result", "bytes", "fieldNumber", "wireType", "tag", "code", "date", "originCode", "destinationCode", "origin", "destination", "flightInfo", "field16Value", "searchMsg", "data", "encoded", "base64", "binary", "i", "__publicField", "cleanText", "text", "parts", "seen", "part", "parseDuration", "duration", "total", "num", "unit", "extractLogoUrl", "style", "urlMatch", "_ScraperService", "url", "controller", "timeoutId", "response", "error", "tfs", "dateMatch", "flightDate", "searchParams", "uniqueFlights", "currentFlight", "htmlResponse", "element", "desc", "idx", "rest", "endIdx", "label", "time", "timeStr", "durationLabel", "durationText", "priceStr", "price", "logoUrl", "key", "a", "b", "ScraperService", "FlightService", "dateObj", "cacheKey", "Api", "status", "details", "errorResponse", "request", "flights", "src_default", "env", "ctx"]
}
